// Update{{.StructName}}Params holds parameters for updating a {{.StructName}}
type Update{{.StructName}}Params struct {
{{range .UpdateFields}}	{{.Name}} {{.Type}} `{{.Tag}}`
{{end}}}

// Update updates an existing {{.StructName}}
func (r *{{.RepositoryName}}) Update(ctx context.Context, id uuid.UUID, params Update{{.StructName}}Params) (*{{.StructName}}, error) {
	query := `
		UPDATE {{.TableName}}
		SET {{.UpdateColumns}}
		WHERE {{.IDColumn}} = ${{.IDParamIndex}}
		RETURNING {{.SelectColumns}}
	`
	
	var {{.ReceiverName}} {{.StructName}}
	err := r.db.QueryRow(ctx, query, {{.UpdateArgs}}).Scan({{.ScanArgs}})
	if err != nil {
		return nil, HandleDatabaseError("update", "{{.StructName}}", err)
	}
	
	return &{{.ReceiverName}}, nil
} 