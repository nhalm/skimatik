// CreateWithRetry creates a new {{.StructName}} with retry logic
func (r *{{.RepositoryName}}) CreateWithRetry(ctx context.Context, params Create{{.StructName}}Params) (*{{.StructName}}, error) {
	return RetryOperation(ctx, DefaultRetryConfig, "create", func(ctx context.Context) (*{{.StructName}}, error) {
		return r.Create(ctx, params)
	})
}

// GetWithRetry retrieves a {{.StructName}} by ID with retry logic
func (r *{{.RepositoryName}}) GetWithRetry(ctx context.Context, id uuid.UUID) (*{{.StructName}}, error) {
	return RetryOperation(ctx, DefaultRetryConfig, "get", func(ctx context.Context) (*{{.StructName}}, error) {
		return r.Get(ctx, id)
	})
}

// UpdateWithRetry updates an existing {{.StructName}} with retry logic
func (r *{{.RepositoryName}}) UpdateWithRetry(ctx context.Context, params Update{{.StructName}}Params) (*{{.StructName}}, error) {
	return RetryOperation(ctx, DefaultRetryConfig, "update", func(ctx context.Context) (*{{.StructName}}, error) {
		return r.Update(ctx, params)
	})
}

// ListWithRetry retrieves all {{.StructName}}s with retry logic
func (r *{{.RepositoryName}}) ListWithRetry(ctx context.Context) ([]{{.StructName}}, error) {
	return RetryOperationSlice(ctx, DefaultRetryConfig, "list", func(ctx context.Context) ([]{{.StructName}}, error) {
		return r.List(ctx)
	})
} 